version: "3.9"

services:
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: always

  daphne:
    build:
      context: .
    # Daphne는 WebSocket 요청만 처리하며 마이그레이션은 하지 않습니다.
    command: >
      sh ./scripts/run_daphne.sh
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: always

  api:
    build:
      context: .
    # API 서버는 마이그레이션 및 정적 파일 수집 후 Gunicorn 실행
    command: >
      sh ./scripts/run_api.sh
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
    restart: always

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./static:/app/static
    ports:
      - "80:80"
    depends_on:
      - daphne
      - api
    restart: always

volumes:
  db_data: {}
