version: '3.8'  # 생략 가능하지만 명시 권장

services:
  # --------------------------------------------
  # 1) PostgreSQL DB
  # --------------------------------------------
  db:
    image: postgres:15-alpine
    ports:
      - "5431:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  # --------------------------------------------
  # 2) Redis
  # --------------------------------------------
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: always

  # --------------------------------------------
  # 3) Daphne (ASGI: WebSocket 처리)
  # --------------------------------------------
  daphne:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "./scripts/run_daphne.sh"
    env_file:
      - .env   # DB 연결용 POSTGRES_* 를 .env 로 읽도록
    volumes:
      - .:/app
    environment:
      PYTHONPATH: /app/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: always

  # --------------------------------------------
  # 4) API (Gunicorn WSGI: HTTP 요청 처리)
  # --------------------------------------------
  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "./scripts/run_api.sh"
    env_file:
      - .env   # DB 연결용 POSTGRES_* 를 .env 로 읽도록
    volumes:
      - .:/app
    environment:
      PYTHONPATH: /app/app
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
    restart: always

  # --------------------------------------------
  # 5) Nginx (리버스 프록시 & 정적파일 서빙)
  # --------------------------------------------
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
    depends_on:
      - daphne
      - api
    restart: always

volumes:
  db_data: {}
  static_volume: {}